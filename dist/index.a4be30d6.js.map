{"mappings":"ACAmB,CAAA,UAGf,GAAI,CACA,IAAM,EAAM,SAAS,cAAc,CAAC,OAGpC,UAAU,IAAI,GAAG,IAAI,CAAC,AAAA,IAElB,EAAM,QAAQ,CAAC,GAAK,IAAI,CAAC,AAAA,IAErB,IAAI,EAAO,OAEX,EAAY,GAAG,CAAC,AAAA,IACZ,GAAQ;A;AAEc,0CAAA,EAAE,EAAE,SAAS,CAAC,UAAU,EAAE,AAAC,CAAA,AAAc,IAAd,EAAE,WAAW,AAAC,EAAK,OAAO,CAAC,GAAG;AAC1E,yBAAA,CAAC,AACV,GAEA,GAAQ,QAER,SAAS,cAAc,CAAC,WAAW,SAAS,CAAG,CACnD,EACJ,EACJ,CAAE,MAAM,EAAO,CACX,QAAQ,KAAK,CAAC,EAClB,CACJ,CAAA","sources":["<anon>","mobilenet.js"],"sourcesContent":["var $107d2aff76c00600$exports = {};\nconst $107d2aff76c00600$var$PredictImg = async ()=>{\n    // const img = document.getElementById('img');\n    try {\n        const img = document.getElementById('img');\n        // Load the model.\n        mobilenet.load().then((model)=>{\n            // Classify the image.\n            model.classify(img).then((predictions)=>{\n                let html = '<ul>';\n                predictions.map((p)=>{\n                    html += `\n                    <li>\n                        <p>Prediction: <b>${p.className}</b> - <b>${(p.probability * 100).toFixed(2)}%</b></p>\n                    </li>`;\n                });\n                html += '</ul>';\n                document.getElementById(\"predict\").innerHTML = html;\n            });\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};\n$107d2aff76c00600$var$PredictImg();\n\n\n//# sourceMappingURL=index.a4be30d6.js.map\n","const PredictImg = async () => {\r\n    // const img = document.getElementById('img');\r\n\r\n    try {\r\n        const img = document.getElementById('img');\r\n\r\n        // Load the model.\r\n        mobilenet.load().then(model => {\r\n            // Classify the image.\r\n            model.classify(img).then(predictions => {\r\n\r\n                let html = '<ul>';\r\n\r\n                predictions.map(p => {\r\n                    html += `\r\n                    <li>\r\n                        <p>Prediction: <b>${p.className}</b> - <b>${(p.probability*100).toFixed(2)}%</b></p>\r\n                    </li>`;\r\n                });\r\n\r\n                html += '</ul>';\r\n\r\n                document.getElementById(\"predict\").innerHTML = html;\r\n            });\r\n        });\r\n    } catch(error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nPredictImg();"],"names":["img","document","getElementById","mobilenet","load","then","model","classify","predictions","html","map","p","className","probability","toFixed","innerHTML","error","console"],"version":3,"file":"index.a4be30d6.js.map"}